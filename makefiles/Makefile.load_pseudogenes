################################################################################
#   Gene prediction pipeline 
#
#   $Id: Makefile.load_pseudogenes 2781 2009-09-10 11:33:14Z andreas $
#
#   Copyright (C) 2004 Andreas Heger
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#################################################################################


#################################################################################
#################################################################################
#################################################################################
#
# Import data pseudogenes.org into OPTIC tables.
#
# requires:
#
#	$(PARAM_GENOME_FILE): 	genome sequence
#	$(PARAM_PEPTIDES_FILE):	fasta file with peptide sequences
#	$(PARAM_GTF_FILE)	a gtf file from pseudogenes.org		
#
#
#################################################################################
#################################################################################
#################################################################################

################################################
## Section parameters: start
################################################
PARAM_PROJECT_NAME?=

## indexed genome sequence database
## only use relative paths
PARAM_GENOME_FILE?=genome

## indexed fasta database with peptide sequences
## used as queries by pseudogenes.org
## only use relative paths
PARAM_PEPTIDES_FILE?=queries

## indexed fasta database with peptide sequences
## used as queries by pseudogenes.org
PARAM_GTF_FILE?=input.gtf

## options for exonerate (model)
PARAM_EXONERATE_OPTIONS?="--subopt FALSE --exhaustive -m p2g" 

## add a flank of # nucleotides for each prediction
PARAM_ADD_FLANK?=200

## for parallel runs
PARAM_CHUNK_SIZE?=500

## minimum coverage of queries to be accepted
PARAM_MIN_QUERY_COVERAGE?=50

################################################
# Section parameters: end
################################################

regions.gff: $(PARAM_GTF_FILE)
	$(PRELOG)
	@perl -pe "s/pgene.*protein /Query /; s/;.*\.Pseudogene:*/; Id /" $< |\
	grep -v "^Current Build" |\
	python $(DIR_SCRIPTS_GENEPREDICTION)gff2gff.py --combine-groups > $@
	$(EPILOG)

data.prepare: regions.gff data.dir
	$(PRELOG)
	@split -l $(PARAM_CHUNK_SIZE) -d -a 5 regions.gff data.dir/chunk_
	@for x in data.dir/chunk*; do mv $${x} $${x}.gff; done
	@ln -s ../$(PARAM_GENOME_FILE).fasta data.dir/genome.fasta
	@ln -s ../$(PARAM_GENOME_FILE).idx data.dir/genome.idx
	@ln -s ../$(PARAM_PEPTIDES_FILE).idx data.dir/queries.idx
	@ln -s ../$(PARAM_PEPTIDES_FILE).fasta data.dir/queries.fasta
	@touch $@
	$(EPILOG)

data.run:
	$(PRELOG)
	@$(MAKE) -C data.dir -k -j $(PARAM_NUM_JOBS) $@-hook
	@touch $@
	$(EPILOG)

QUERIES=$(wildcard *.gff)
TARGETS=$(QUERIES:%.gff=%.table)

data.run-hook: $(TARGETS)

%.table: %.gff
	$(PRELOG)
	@$(CMD_REMOTE_SUBMIT) \
	python $(DIR_SCRIPTS_GENEPREDICTION)Predictor.py \
		--genome-file=genome \
		--from-gff=$< \
		--options=\"$(PARAM_EXONERATE_OPTIONS)\" \
		--filename-peptides=queries \
		--add-flank=$(PARAM_ADD_FLANK) \
		--verbose=2 \
		--log=$@.log \
	< /dev/null > $@
	$(EPILOG)


data.finish: data.run pseudogenes.predictions
	$(PRELOG)
	@touch $@
	$(EPILOG)

#########################################################
#########################################################
#########################################################
## collect results into a predictions table
##
## This script will remove predictions with low query
## coverage (50%) and duplicates.
#########################################################
pseudogenes.predictions: data.run
	$(PRELOG)
	@find data.dir -name "*.table" -exec cat {} \; > $@.tmp
	@cut -f 1 $@.tmp | sort | uniq -c | awk '!/^id/ && $$1 > 1 {printf("%s\n", $$2);}' > $@.duplicates
	@awk -v outfile=$@.discarded -v infile=$@.duplicates\
		'BEGIN { while (getline < infile) { a[$$1] = 1;} } \
		NR == 1 { print; next; } \
		!/^id/ { \
		if ($$14 >= $(PARAM_MIN_QUERY_COVERAGE) && !a[$$1]) { print; } else { print >> outfile; }}' \
	< $@.tmp > $@
	@find data.dir -name "*.table.log" -exec cat {} \; > $@.log
	@rm -f $@.tmp
	@printf "pseudogenes: %i found; %i discarded\n" \
		`grep -v "id" -c < $@` `wc -l < $@.discarded` \
		$(TOLOG)
	$(EPILOG)

#########################################################
#########################################################
#########################################################
## re-format results file for loading into postgres database
##
## - refence.exons file  
## - peptides.fasta file
## - peptides2genes
## 
## These files serve as input to Makefile.load_ensembl
##
#########################################################
export: reference.exons peptides.fasta peptides2genes

reference.exons: pseudogenes.predictions
	$(PRELOG)
	@python ~/gpipe/gpipe/predictions2cds.py \
		--format=exons \
		--genome-file=$(PARAM_GENOME_FILE) \
		--reset-query \
		--forward-coordinates \
		--log=$@.log \
	< $< > $@
	$(EPILOG)


peptides.fasta: pseudogenes.predictions
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)csv_cut.py \
		id translation \
	< $< |\
	awk '!/^id/ {printf(">%s\n%s\n", $$1, $$2); }' \
	> $@
	$(EPILOG)


peptides2genes: pseudogenes.predictions
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)csv_cut.py \
		id translation \
	< $< |\
	awk '!/^id/ {printf("%s\t%s\n", $$1, $$1); }' \
	> $@
	$(EPILOG)

#########################################################
#########################################################
#########################################################
## output summary
##
#########################################################
summary:
	@printf "input\t%i\n" `wc -l < regions.gff`
	@printf "duplicates\t%i\n" `cut -f 1 < pseudogenes.predictions.duplicates | grep -v "^id" | wc -l`
	@printf "discarded\t%i\n" `cut -f 1 < pseudogenes.predictions.discarded | sort | uniq | grep -v "^id" | wc -l`
	@printf "predicted\t%i\n" `cut -f 1 < pseudogenes.predictions | grep -v "^id" | wc -l`


#########################################################
#########################################################
#########################################################
## clean
##
#########################################################
clean: 
	@rm -rf data.dir

include $(DIR_SCRIPTS_GENEPREDICTION)/makefiles/Makefile.common
