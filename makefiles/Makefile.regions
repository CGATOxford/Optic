################################################################################
#   Gene prediction pipeline 
#
#   $Id: Makefile.regions 1831 2008-05-08 11:59:26Z andreas $
#
#   Copyright (C) 2004 Andreas Heger
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#################################################################################
SHELL=/bin/bash --login

LOG=log

################################################
## Section parameters: start
################################################
################################################
## project name
PARAM_PROJECT_NAME?=geneprediction
################################################
## directories
## directory where gene prediction scripts can be found
DIR_SCRIPTS_GENEPREDICTION=/home/andreas/group/andreas/src/test/gpipe/
## directory where various helper scripts can be found
DIR_SCRIPTS_TOOLS?=/net/cpp-group/scripts/tools/
## shared directory, path for submit host
DIR_TMP_SHARED_LOCAL?=/net/cpp-group/andreas/tmp/$(PARAM_PROJECT_NAME)/
## shared directory, path for cluster node
DIR_TMP_SHARED_REMOTE?=/net/cpp-group/andreas/tmp/$(PARAM_PROJECT_NAME)/

################################################
## Cluster parameters
## queue to submit to
PARAM_QUEUE?=bc1.q,bc2.q

################################################
## Database connection parameters
## database
PARAM_PSQL_DATABASE?=andreas
## host
PARAM_PSQL_HOST?=fgu202
## user
PARAM_PSQL_USER?=andreas
## schema
PARAM_PSQL_SCHEMA?=$(PARAM_PROJECT_NAME)
## predictions table
PARAM_TABLE_NAME_PREDICTIONS?=$(PARAM_PSQL_SCHEMA).predictions
## summary table
PARAM_TABLE_NAME_QUERIES?=$(PARAM_PSQL_SCHEMA).queries
## exons table
PARAM_TABLE_NAME_EXONS?=$(PARAM_PSQL_SCHEMA).exons
## summary of exon structures
PARAM_TABLE_NAME_EXONS_SUMMARY?=$(PARAM_PSQL_SCHEMA).exons_summary
## predicted genic regions
PARAM_TABLE_NAME_REGIONS?=$(PARAM_PSQL_SCHEMA).regions
## kaks values for predictions
PARAM_TABLE_NAME_KAKS?=$(PARAM_PSQL_SCHEMA).kaks
## quality indices for predictions
PARAM_TABLE_NAME_QUALITY?=$(PARAM_PSQL_SCHEMA).quality
## quality indices for predictions
PARAM_TABLE_NAME_EXONS?=$(PARAM_PSQL_SCHEMA).quality
## quality indices for predictions
PARAM_TABLE_NAME_GENES?=$(PARAM_PSQL_SCHEMA).genes
## quality indices for predictions
PARAM_TABLE_NAME_CONTIGS?=$(PARAM_PSQL_SCHEMA).contigs

################################################
## Filtering options for removing bad predictions:
## minimum score
PARAM_FILTER_MIN_SCORE?=80
## minimum coverage of query
PARAM_FILTER_MIN_COVERAGE_QUERY?=10
## minimum coverage of query
PARAM_FILTER_MIN_PERCENT_IDENTITY?=0

#########################################################################
## KAKS
## number of jobs to submit to the queue in parallel
PARAM_KAKS_NUMJOBS=100
## chunk size of kaks calculation (note: multiple of two!!!)
PARAM_KAKS_CHUNKSIZE?=1000

################################################
## Thresholds for quality control
## "good" exons have a percent identity of at least
## this percentage of the average percent identity over
## the complete sequence.
PARAM_QUALITY_GOOD_EXON_THRESHOLD=75
## minimum coverage of fully predicted genes
PARAM_QUALITY_MIN_COVERAGE=80

################################################
## parameters for BLAT
## ports used by BLAT servers
PARAM_BLAT_SERVERS?=8004
## directory of genomic files used by BLAT servers
PARAM_BLAT_DIR?=/net/cpp-group/databases/blat_nib_files/dog_ucsc_cf1

################################################
# Section parameters: end
################################################

################################################
################################################
################################################
################################################
################################################
################################################

################################################
## parallel ks calculation
KAKS_QUERIES=$(wildcard kaks_*.chunk)
KAKS_TARGETS=$(KAKS_QUERIES:%.chunk=%.matches)

################################################
## Database connectivity
## ENSEMBL
ENSEMBL_CMD_MYSQL?=mysql -h$(PARAM_ENSEMBL_HOST) -u$(PARAM_ENSEMBL_USER)
## Postgres
CONNECTION=psql -h $(PARAM_PSQL_HOST) -d $(PARAM_PSQL_DATABASE) $(PARAM_PSQL_USER) -c
CMD_TABLE_PREFIX=`echo $* | perl -p -e "s/\./_/g"`
################################################
## 
## analysis targets
HISTOGRAMS=prediction_pide.hist prediction_coverage.hist
PLOTS=$(HISTOGRAMS:%.hist=%.png)
QUALITY_CLASSES=CG PP SP DP UG UK UP CF UF PF

CMD_BLAT=gfClient -q=rna -t=dna -out=pslx fgu202 

include $(DIR_SCRIPTS_GENEPREDICTION)/makefiles/Makefile.step8
include $(DIR_SCRIPTS_GENEPREDICTION)/makefiles/Makefile.step9
include $(DIR_SCRIPTS_GENEPREDICTION)/makefiles/Makefile.step10
include $(DIR_SCRIPTS_GENEPREDICTION)/makefiles/Makefile.tables
include $(DIR_SCRIPTS_GENEPREDICTION)/makefiles/Makefile.missed

prepare:
	echo "do nothing"

all: 

create_scripts:


##############################################################################
# step 7: create collectecd predictions
##############################################################################
step7: collected.predictions
	echo "`date`: $@ completed." >> $(LOG); 
	touch $@

collected.predictions: cds.blat
	perl -p -e "s/.fa//" < cds.blat |\
	python $(DIR_SCRIPTS_GENEPREDICTION)blat2predictions.py > $@

#########################################################################
create_tables: $(PARAM_TABLE_NAME_PREDICTIONS).create_table_predictions \
	$(PARAM_TABLE_NAME_EXONS).create_table_exons \
	$(PARAM_TABLE_NAME_EXONS_SUMMARY).create_table_exons_summary \
	$(PARAM_TABLE_NAME_QUALITY).create_table_quality \
	$(PARAM_TABLE_NAME_GENES).create_table_genes


#########################################################################
%.create_table_overview:
	-$(CONNECTION) "DROP VIEW $* CASCADE";
	$(CONNECTION) "CREATE VIEW $* \
	( \
	prediction_id, \
	query_token, \
	sbjct_token, \
	sbjct_strand, \
	rank, \
	score, \
	query_from, \
	query_to, \
	query_ali, \
	sbjct_from, \
	sbjct_to, \
	sbjct_ali, \
	query_length, \
	query_coverage, \
	ngaps, \
	nframeshifts, \
	nintrons, \
	nsplits, \
	nstopcodons, \
	pidentity, \
	psimilarity, \
	sequence, \
	full_sbjct_genome_from, \
	full_sbjct_genome_to, \
	map_query2genome, \
	is_best_prediction, \
	is_conserved, \
	is_partially_conserved, \
	has_frameshift, \
	has_stopcodon, \
	sbjct_genome_from, \
	sbjct_genome_to, \
	class, \
	gene_id, \
	export_sbjct_genome_from, \
	export_sbjct_genome_to	) \
	AS \
	SELECT p.*, \
	TRUE, \
	TRUE, \
	TRUE, \
	FALSE, \
	FALSE, \
	sbjct_genome_from, \
	sbjct_genome_to, \
	CAST('CG' AS TEXT), \
	g.gene_id, \
	CASE WHEN p.sbjct_strand = '+' THEN p.sbjct_genome_from WHEN sbjct_strand = '-' THEN c.size-p.sbjct_genome_to END, \
	CASE WHEN p.sbjct_strand = '+' THEN p.sbjct_genome_to   WHEN sbjct_strand = '-' THEN c.size-p.sbjct_genome_from END \
	FROM $(PARAM_TABLE_NAME_PREDICTIONS) AS p, \
	$(PARAM_TABLE_NAME_GENES) AS g, \
	$(PARAM_TABLE_NAME_CONTIGS) AS c \
	WHERE \
	p.prediction_id = g.prediction_id AND \
	c.sbjct_token = p.sbjct_token"

cds.fasta:
	touch $@

reference.exons:
	touch $@
