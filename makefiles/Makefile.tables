################################################################################
#   Gene prediction pipeline 
#
#   $Id: Makefile.tables 990 2007-02-13 11:47:51Z andreas $
#
#   Copyright (C) 2004 Andreas Heger
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#################################################################################
TYPE_PREDICTION_ID?=INTEGER
TYPE_GENE_ID?=INTEGER

TO_NULL?=>& /dev/null

#########################################################################
create-schema:
	$(CMD_LOG) "creating schema $(PARAM_PSQL_SCHEMA)"
	-@$(PSQL_CONNECTION) "CREATE SCHEMA $(PARAM_PSQL_SCHEMA)" $(TO_NULL);

#########################################################################
%.create-table-queries:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE " $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	query_id INTEGER, \
	query_token TEXT, \
	rep_token TEXT, \
	nexons INTEGER, \
	length INTEGER, \
	nmasked_residues INTEGER, \
	ortholog_prediction_id $(TYPE_PREDICTION_ID), \
	nregions INTEGER, \
	npredictions INTEGER, \
	nr_npredictions INTEGER, \
	predictions_per_class INTEGER[$(QUALITY_NUM_CLASSES)], \
	nr_predictions_per_class INTEGER[$(QUALITY_NUM_CLASSES)], \
	PRIMARY KEY(query_token) );" $(TO_NULL)

#########################################################################
%.create-table-kaks:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE " $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	prediction_id $(TYPE_PREDICTION_ID), \
	dn FLOAT, \
	ds FLOAT, \
	omega FLOAT, \
	n FLOAT, \
	s FLOAT, \
	dn_std_err FLOAT, \
	ds_std_err FLOAT, \
	kappa FLOAT, \
	lnl FLOAT, \
	tau FLOAT, \
	error TEXT)" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_prediction_id ON $* (prediction_id);" $(TO_NULL)

#########################################################################
%.create-table-predictions:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE " $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	prediction_id $(TYPE_PREDICTION_ID), \
	query_token TEXT, \
	sbjct_token TEXT, \
	sbjct_strand TEXT, \
	rank INTEGER, \
	score FLOAT, \
	query_from INTEGER, \
	query_to INTEGER, \
	query_ali TEXT, \
	sbjct_from INTEGER, \
	sbjct_to INTEGER, \
	sbjct_ali TEXT, \
	query_length INTEGER, \
	query_coverage FLOAT, \
	ngaps INTEGER, \
	nframeshifts INTEGER, \
	nintrons INTEGER, \
	nsplits INTEGER, \
	nstopcodons INTEGER, \
	pidentity FLOAT, \
	psimilarity FLOAT, \
	sequence TEXT, \
	sbjct_genome_from INTEGER, \
	sbjct_genome_to INTEGER, \
	map_query2genome TEXT, \
	nassembled INTEGER, \
	PRIMARY KEY(prediction_id))" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_query_token ON $* (query_token);" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_sbjct_token ON $* (sbjct_token);" $(TO_NULL)

#########################################################################
%.create-table-exons_summary: 
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	prediction_id $(TYPE_PREDICTION_ID), \
	number INTEGER, \
	dubious_exons INTEGER, \
	boundaries_sum INTEGER, \
	boundaries_max INTEGER, \
	identical_exons INTEGER, \
	inserted_exons INTEGER, \
	deleted_exons INTEGER, \
	inserted_introns INTEGER, \
	deleted_introns INTEGER, \
	truncated_Nterminus INTEGER, \
	truncated_Cterminus INTEGER, \
	deleted_Nexons INTEGER, \
	deleted_Cexons INTEGER, \
	inserted_Nexons INTEGER, \
	inserted_Cexons INTEGER, \
	PRIMARY KEY(prediction_id) ) " $(TO_NULL)

#########################################################################
%.create-table-exons:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	prediction_id $(TYPE_PREDICTION_ID), \
	exon_id INTEGER, \
	exon_from INTEGER, \
	exon_to INTEGER, \
	exon_frame INTEGER, \
	reference_id INTEGER, \
	reference_from INTEGER, \
	reference_to INTEGER, \
	reference_phase INTEGER, \
	pidentity FLOAT, \
	psimilarity FLOAT, \
	nframeshifts INTEGER, \
	ngaps INTEGER, \
	nstopcodons INTEGER, \
	is_ok BOOLEAN, \
	genome_exon_from INTEGER, \
	genome_exon_to INTEGER ) " $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_prediction_id ON $* (prediction_id);" $(TO_NULL)

#########################################################################
%.create-table-cds:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	cds_id INTEGER, \
	prediction_id $(TYPE_PREDICTION_ID), \
	exon_from INTEGER, \
	exon_to INTEGER, \
	exon_frame INTEGER, \
	genome_exon_from INTEGER, \
	genome_exon_to INTEGER, \
	sequence TEXT, \
	PRIMARY KEY (cds_id) )" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_prediction_id ON $* (prediction_id);" $(TO_NULL)

#########################################################################
%.create-table-prediction2genome:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	prediction_id $(TYPE_PREDICTION_ID), \
	peptide_from INTEGER, \
	peptide_to INTEGER, \
	peptide_ali TEXT, \
	genome_from INTEGER, \
	genome_to INTEGER, \
	genome_ali TEXT, \
	PRIMARY KEY(prediction_id) )" $(TO_NULL)

#########################################################################
%.create-table-quality:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	prediction_id $(TYPE_PREDICTION_ID), \
	is_best_prediction BOOLEAN, \
	is_conserved BOOLEAN, \
	is_partially_conserved BOOLEAN, \
	has_frameshift BOOLEAN, \
	has_stopcodon BOOLEAN, \
	sbjct_genome_from INTEGER, \
	sbjct_genome_to INTEGER, \
	class CHAR(2), \
	PRIMARY KEY(prediction_id) )" $(TO_NULL)

#########################################################################
%.create-table-genes:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	prediction_id $(TYPE_PREDICTION_ID), \
	gene_id $(TYPE_GENE_ID), \
	overlap_id $(TYPE_GENE_ID), \
	PRIMARY KEY(prediction_id) )" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_gene_id ON $* (gene_id);" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_overlap_id ON $* (overlap_id);" $(TO_NULL)

#########################################################################
%.create-table-geneinfo:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	gene_id $(TYPE_GENE_ID), \
	npredictions INT, \
	best_prediction_id $(TYPE_PREDICTION_ID), \
	best_class CHAR(2), \
	PRIMARY KEY(gene_id) )" $(TO_NULL)

#########################################################################
%.create-table-contigs:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	sbjct_token TEXT, \
	size INTEGER, \
	start INTEGER DEFAULT '0', \
	PRIMARY KEY (sbjct_token) )" $(TO_NULL) 

#########################################################################
%.create-table-overview:
	$(CMD_LOG) "creating table $*" 
	-@$(PSQL_CONNECTION) "DROP VIEW $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE VIEW $* \
	( \
	prediction_id, \
	query_token, \
	sbjct_token, \
	sbjct_strand, \
	rank, \
	score, \
	query_from, \
	query_to, \
	query_ali, \
	sbjct_from, \
	sbjct_to, \
	sbjct_ali, \
	query_length, \
	query_coverage, \
	ngaps, \
	nframeshifts, \
	nintrons, \
	nsplits, \
	nstopcodons, \
	pidentity, \
	psimilarity, \
	sequence, \
	full_sbjct_genome_from, \
	full_sbjct_genome_to, \
	map_query2genome, \
	nassembled, \
	is_best_prediction, \
	is_conserved, \
	is_partially_conserved, \
	has_frameshift, \
	has_stopcodon, \
	sbjct_genome_from, \
	sbjct_genome_to, \
	class, \
	gene_id, \
	overlap_id, \
	export_sbjct_genome_from, \
	export_sbjct_genome_to, \
	has_start, \
	has_stop, \
	extended_sequence, \
	extended_sbjct_genome_from, \
	extended_sbjct_genome_to, \
	extended_map_query2genome ) \
	AS \
	SELECT p.*, \
	q.is_best_prediction, \
	q.is_conserved, \
	q.is_partially_conserved, \
	q.has_frameshift, \
	q.has_stopcodon, \
	q.sbjct_genome_from, \
	q.sbjct_genome_to, \
	q.class, \
	g.gene_id, \
	g.overlap_id, \
	CASE WHEN p.sbjct_strand = '+' THEN p.sbjct_genome_from+c.start WHEN sbjct_strand = '-' THEN c.size-p.sbjct_genome_to+c.start END, \
	CASE WHEN p.sbjct_strand = '+' THEN p.sbjct_genome_to+c.start   WHEN sbjct_strand = '-' THEN c.size-p.sbjct_genome_from+c.start END, \
	t.has_start, \
	t.has_stop, \
	t.sequence, \
	t.sbjct_genome_from, \
	t.sbjct_genome_to, \
	t.map_query2genome \
	FROM $(PARAM_TABLE_NAME_PREDICTIONS) AS p, \
	$(PARAM_TABLE_NAME_QUALITY) AS q, \
	$(PARAM_TABLE_NAME_GENES) AS g, \
	$(PARAM_TABLE_NAME_TRANSCRIPTS) AS t, \
	$(PARAM_TABLE_NAME_CONTIGS) AS c \
	WHERE \
	p.prediction_id = q.prediction_id AND \
	p.prediction_id = g.prediction_id AND \
	p.prediction_id = t.prediction_id AND \
	p.sbjct_token = c.sbjct_token" $(TO_NULL)

#########################################################################
%.create-table-prediction_ids:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	prediction_id $(TYPE_PREDICTION_ID), \
	PRIMARY KEY(prediction_id) )" $(TO_NULL)

#########################################################################
%.create-table-map:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	rep_prediction_id $(TYPE_PREDICTION_ID), \
	mem_prediction_id $(TYPE_PREDICTION_ID), \
	method TEXT )" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_rep_prediction_id ON $* (rep_prediction_id);" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_mem_prediction_id ON $* (mem_prediction_id);" $(TO_NULL)

#########################################################################
%.create-table-transcripts:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE " $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	prediction_id $(TYPE_PREDICTION_ID), \
	has_start BOOLEAN, \
	has_stop BOOLEAN, \
	extension_start INTEGER, \
	extension_stop INTEGER, \
	sequence TEXT, \
	sbjct_genome_from INTEGER, \
	sbjct_genome_to INTEGER, \
	map_query2genome TEXT, \
	PRIMARY KEY(prediction_id) ) " $(TO_NULL)

#########################################################################
%.create-table-disruptions:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE " $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	prediction_id $(TYPE_PREDICTION_ID), \
	type TEXT, \
	cds_from INTEGER, \
	cds_to INTEGER, \
	genome_from INTEGER, \
	genome_to INTEGER)" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_prediction_id ON $* (prediction_id);" \
	$(TO_NULL)

#########################################################################
## Table with intron information
%.create-table-introns:
	$(CMD_LOG) "creating table $*"
	-@$(CONNECTION) "DROP TABLE $* CASCADE " $(TO_NULL)
	@$(CONNECTION) "CREATE TABLE $* ( \
	prediction_id $(TYPE_PREDICTION_ID), \
	intron_id INTEGER, \
	sbjct_token TEXT, \
	sbjct_strand TEXT, \
	genome_from INTEGER, \
	genome_to INTEGER, \
	length INTEGER, \
	nstops INTEGER, \
	type TEXT, \
	prime5 TEXT, \
	prime3 TEXT \
	)" $(TO_NULL)
	@$(CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_prediction_id ON $* (prediction_id);" \
	$(TO_NULL)

#########################################################################
%.create-table-domains_summary:
	$(CMD_LOG) "creating table $*"
	-@$(PSQL_CONNECTION) "DROP TABLE $* CASCADE" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE TABLE $* ( \
	domain_id TEXT, \
	ndomains INTEGER, \
	npredictions INTEGER, \
	nr_ndomains INTEGER, \
	nr_npredictions INTEGER )" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_domain_id ON $* (domain_id);" \
	$(TO_NULL)

#########################################################################
## table maintenance commands
create-table-overview: $(PARAM_TABLE_NAME_OVERVIEW).create-table-overview

materialize_views: step10 
	$(CMD_LOG) "$@ started."
	-@$(PSQL_CONNECTION) "DROP TABLE $(PARAM_TABLE_NAME_MOVERVIEW) CASCADE"
	@$(PSQL_CONNECTION) "CREATE TABLE $(PARAM_TABLE_NAME_MOVERVIEW) (\
	    prediction_id integer         ,\
	    query_token text            ,\
	    sbjct_token text            ,\
	    sbjct_strand text            ,\
	    rank integer         ,\
	    score double precision,\
	    query_from integer         ,\
	    query_to integer         ,\
	    query_ali text            ,\
	    sbjct_from integer         ,\
	    sbjct_to integer         ,\
	    sbjct_ali text            ,\
	    query_length integer         ,\
	    query_coverage double precision,\
	    ngaps integer         ,\
	    nframeshifts integer         ,\
	    nintrons integer         ,\
	    nsplits integer         ,\
	    nstopcodons integer         ,\
	    pidentity double precision,\
	    psimilarity double precision,\
	    sequence text            ,\
	    full_sbjct_genome_from integer         ,\
	    full_sbjct_genome_to integer         ,\
	    map_query2genome text            ,\
	    nassembled integer, \
	    is_best_prediction boolean         ,\
	    is_conserved boolean         ,\
	    is_partially_conserved boolean         ,\
	    has_frameshift boolean         ,\
	    has_stopcodon boolean         ,\
	    sbjct_genome_from integer         ,\
	    sbjct_genome_to integer         ,\
	    class character(2)    ,\
	    gene_id integer         ,\
	    overlap_id integer         ,\
	    export_sbjct_genome_from integer         ,\
	    export_sbjct_genome_to integer         ,\
	    has_start boolean         ,\
	    has_stop boolean         ,\
	    extended_sequence text            ,\
	    extended_sbjct_genome_from integer         ,\
	    extended_sbjct_genome_to integer         ,\
	    extended_map_query2genome text)"
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_prediction_id ON $(PARAM_TABLE_NAME_MOVERVIEW) (prediction_id);" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_sbjct_genome_from ON $(PARAM_TABLE_NAME_MOVERVIEW) (sbjct_token, sbjct_strand, sbjct_genome_from);" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_extended_sbjct_genome_from ON $(PARAM_TABLE_NAME_MOVERVIEW) (sbjct_token, sbjct_strand, extended_sbjct_genome_from);" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_class ON $(PARAM_TABLE_NAME_MOVERVIEW) (class);" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_gene_id ON $(PARAM_TABLE_NAME_MOVERVIEW) (gene_id);" $(TO_NULL)
	@$(PSQL_CONNECTION) "CREATE INDEX $(CMD_TABLE_PREFIX)_overlap_id ON $(PARAM_TABLE_NAME_MOVERVIEW) (overlap_id);" $(TO_NULL)
	@$(PSQL_CONNECTION) "INSERT INTO $(PARAM_TABLE_NAME_MOVERVIEW) SELECT * FROM $(PARAM_TABLE_NAME_OVERVIEW)" $(TO_NULL)
	@$(PSQL_CONNECTION) "ANALYSE $(PARAM_TABLE_NAME_MOVERVIEW)" $(TO_NULL)
	$(CMD_LOG) "$@ completed."
	@touch $@

analyze-tables:
	$(CMD_LOG) "analyzing tables in schema $(PARAM_PSQL_SCHEMA)"
	-@$(PSQL_CONNECTION) "ANALYSE $(PARAM_PSQL_SCHEMA)"

%.analyze-table:
	$(CMD_LOG) "analyzing table $*"
	-@$(PSQL_CONNECTION) "ANALYSE $*"

