################################################################################
#   Gene prediction pipeline 
#
#   $Id: Makefile.orthology_merge 2781 2009-09-10 11:33:14Z andreas $
#
#   Copyright (C) 2004 Andreas Heger
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#################################################################################
## Makefile for adding new links to a blast file.
## Merging is done based on identifiers. Predictions from
## different projects but same genome (dmoj_vs_dmel2 will be
## different from dmoj_vs_dmel3).
SHELL=/bin/bash --login

LOG=log

################################################
## Section parameters: start
################################################

################################################
## directories
## directory where gene prediction scripts can be found
DIR_SCRIPTS_GENEPREDICTION?=/home/andreas/gpipe/
## directory where various helper scripts can be found
DIR_SCRIPTS_TOOLS?=/net/cpp-group/scripts/tools/

################################################
PARAM_OLD_LINKS?=

PARAM_NEW_SEQUENCES?=
PARAM_OLD_SEQUENCES?=

################################################

PARAM_BLASTP_NUMFIELDS?=14 
PARAM_BLASTP_PARSING?=--ends --table --len --noheader --log --bits
PARAM_BLASTP_OPTIONS?=-e 1e-5 -v 5000 -b 5000 -F F 

## effective database length for rescaling of E-Values.
PARAM_EFFECTIVE_LENGTH?=83616217

PARAM_SEPARATOR?=|

################################################
## cluster priority of jobs
PARAM_PRIORITY?=0

################################################
## Section parameters: end
################################################
update-blast: update-blast.prepare update-blast.run update-blast.finish

#########################################################################
map_old2new:
	$(PRELOG)
	grep ">" $(PARAM_NEW_SEQUENCES) | perl -p -e "s/>//; s/ .*$$//" |\
	awk -v FS="$(PARAM_SEPARATOR)" '{printf("%s$(PARAM_SEPARATOR)%s$(PARAM_SEPARATOR)%s\t%s\n", $$1,$$2,$$3,$$0);}' > map_new
	grep ">" $(PARAM_OLD_SEQUENCES) | perl -p -e "s/>//; s/ .*$$//" |\
	awk -v FS="$(PARAM_SEPARATOR)" '{printf("%s$(PARAM_SEPARATOR)%s$(PARAM_SEPARATOR)%s\t%s\n", $$1,$$2,$$3,$$0);}' > map_old
	python $(DIR_SCRIPTS_TOOLS)substitute_tokens.py --apply=map_old --columns=1 --filter < map_new > $@
	perl $(DIR_SCRIPTS_TOOLS)set_rest.pl  <(cut -f 2 map_old2new) <(cut -f 2 map_new) > new
	$(EPILOG)

new.fasta: map_old2new
	$(PRELOG)
	@perl $(DIR_SCRIPTS_GENEPREDICTION)extract_fasta.pl new < $(PARAM_NEW_SEQUENCES) > $@
	$(CMD_LOG) "sequences in $@: `grep -c '>' < $@`"
	$(EPILOG)

all.fasta: map_old2new
	$(PRELOG)
	cp $(PARAM_NEW_SEQUENCES) all.fasta
	$(CMD_LOG) "sequences in $@: `grep -c '>' < $@`"
	$(EPILOG)

update-blast.prepare: map_old2new new.fasta all.fasta
	$(PRELOG)
	python $(DIR_SCRIPTS_GENEPREDICTION)gpipe/setup.py -f -m blast -p all_vs_new -d all_vs_new \
		PARAM_BLASTP_NUMFIELDS="$(PARAM_BLASTP_NUMFIELDS)" \
		PARAM_BLASTP_PARSING="$(PARAM_BLASTP_PARSING)" \
		PARAM_BLASTP_OPTIONS="$(PARAM_BLASTP_OPTIONS) -z $(PARAM_EFFECTIVE_LENGTH)" \
		PARAM_PRIORITY=$(PARAM_PRIORITY) > new_vs_all.log
	-ln -s ../new.fasta all_vs_new/sbjcts.fasta
	-ln -s ../all.fasta all_vs_new/queries.fasta
	python $(DIR_SCRIPTS_GENEPREDICTION)gpipe/setup.py -f -m blast -p new_vs_all -d new_vs_all \
		PARAM_BLASTP_NUMFIELDS="$(PARAM_BLASTP_NUMFIELDS)" \
		PARAM_BLASTP_PARSING="$(PARAM_BLASTP_PARSING)" \
		PARAM_BLASTP_OPTIONS="$(PARAM_BLASTP_OPTIONS) -z $(PARAM_EFFECTIVE_LENGTH)" \
		PARAM_PRIORITY=$(PARAM_PRIORITY) > all_vs_new.log
	-ln -s ../all.fasta new_vs_all/sbjcts.fasta
	-ln -s ../new.fasta new_vs_all/queries.fasta
	@touch $@
	$(EPILOG)

#########################################################################
update-blast.run: update-blast.prepare new_vs_all all_vs_new filtered.links
	@touch $@
	$(EPILOG)

## get only those links that are in the database
## and rescale evalue so that it fits the new database
## size
filtered.links: map_old2new
	$(PRELOG)
	python $(DIR_SCRIPTS_TOOLS)substitute_tokens.py \
		--columns-token=1,2 \
		--apply=map_old2new \
		--filter \
	< $(PARAM_OLD_LINKS) |\
	python $(DIR_SCRIPTS_TOOLS)graph_blast2pairs.py \
	--method=reset-evalue \
	--evalue-to-log \
	--effective-length=$(PARAM_EFFECTIVE_LENGTH) |\
	grep -v "#" > $@
	$(CMD_LOG) "links in $@"
	@perl $(DIR_SCRIPTS_TOOLS)graph_howmany.pl < $@ $(TOLOG)
	$(EPILOG)

SUBDIRS=new_vs_all all_vs_new

.PHONY: $(SUBDIRS) update-blast.run

$(SUBDIRS):
	$(MAKE) -C $@ blast

#########################################################################
update-blast.finish: new.links 

new.links: all_vs_new new_vs_all filtered.links
	$(PRELOG)
	sort -k1,1n -k3,3n -m all_vs_new/blast.links new_vs_all/blast.links filtered.links > $@
	@perl $(DIR_SCRIPTS_TOOLS)graph_howmany.pl < $@ $(TOLOG)
	$(EPILOG)

include $(DIR_SCRIPTS_GENEPREDICTION)/makefiles/Makefile.common

