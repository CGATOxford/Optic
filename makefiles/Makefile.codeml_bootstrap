################################################################################
#
#   Gene prediction pipeline 
#
#   $Id: Makefile.codeml_bootstrap 2781 2009-09-10 11:33:14Z andreas $
#
#   Copyright (C) 2005 Andreas Heger
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#################################################################################
##
## Perform bootstrap analysis on a codon based multiple alignment
##
## Allowed variations:
##
##	Distance matrix based tree building algorithms
##	from the phylip package
##	1. tree building method fitch, kitsch, neighbor
##
##	2. distance matrices
##	
##	1. Distance implemented in dnadist from PHYLIP
##	2. ks based distance measurement
##
##	Note: the input multiple alignment should be free
##		of frameshifts and stop-codons.	 	
################################################ 

################################################
## Section parameters: start
################################################

################################################
## project name
PARAM_PROJECT_NAME?=

PARAM_BOOTSTRAP_NUM_SAMPLES?=100

################################################
PARAM_BOOTSTRAP_TREE_METHOD?=kitsch

## maximum ks
PARAM_BOOTSTRAP_MAX_KS?=5

################################################
## Section parameters: end
################################################


#######################################################################
#######################################################################
#######################################################################
## 1. translate alignment and build boostrap samples
#######################################################################
bootstrap.prepare: input.mali
	$(PRELOG)
	@$(MAKE) samples.dir
	@python $(DIR_SCRIPTS_TOOLS)mali2bootstrap.py \
		--samples=$(PARAM_BOOTSTRAP_NUM_SAMPLES) \
		--block-size=3 \
		--output-filename-pattern="samples.dir/sample_%05i.fasta" \
	< $< > $@
	$(EPILOG)

#######################################################################
#######################################################################
#######################################################################
bootstrap.run: bootstrap.prepare
	$(PRELOG)
	@$(MAKE) -j $(PARAM_NUM_JOBS) -k -C samples.dir bootstrap.run-hook
	$(EPILOG)


#######################################################################
#######################################################################
#######################################################################
bootstrap.finishe: bootstrap.run consensus.tree

#######################################################################
#######################################################################
#######################################################################
## 3. build distance matrices and trees.
#######################################################################
BOOTSTRAP_QUERIES=$(wildcard sample_*.fasta)
BOOTSTRAP_TARGETS=$(BOOTSTRAP_QUERIES:%.fasta=%.kaks) $(BOOTSTRAP_QUERIES:%.fasta=%.tree)

bootstrap.run-hook: $(BOOTSTRAP_TARGETS)


%.kaks: %.fasta
	$(PRELOG)
	@$(CMD_REMOTE_SUBMIT) \
	python $(DIR_SCRIPTS_GENEPREDICTION)mali2kaks.py \
		--pairwise \
		--set-codon-frequencies=F3X4 \
	< $< > $@
	$(EPILOG)

%.tree: %.kaks
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)csv_cut.py seq1 seq2 dS \
	< $< |\
	awk '$$3 <= $(PARAM_BOOTSTRAP_MAX_KS)' |\
	perl -p -e "s/_(\S):/\|\$$\$$1/g" |\
	$(CMD_REMOTE_SUBMIT) \
	"python $(DIR_SCRIPTS_TOOLS)sparse2full.py \
		--output-format=phylip-replicates \
		--default-diagonal=0 \
		--default=0 |\
	python $(DIR_SCRIPTS_TOOLS)matrix2tree.py \
		--replicates \
		--method=$(PARAM_BOOTSTRAP_TREE_METHOD)" \
	> $@



#######################################################################
#######################################################################
#######################################################################
## Build consensus tree
#######################################################################
consensus.tree:
	$(PRELOG)
	-rm -rf $@.dir
	mkdir $@.dir
	find samples.dir -name "*.tree" -exec grep -v "#" {} \; |\
	python $(DIR_SCRIPTS_TOOLS)tree2tree.py \
		--method=build-map \
		--parameters=$@.map \
		--log=$@.log \
		--verbose=0 \
	> $@.dir/intree
	cd $@.dir; echo -e "Y\n" | consense >> $@.log
	@cat $@.dir/outfile >> $@.log
	python $(DIR_SCRIPTS_TOOLS)tree2tree.py \
		--method=rename \
		--invert-map \
		--parameters=$@.map \
	< $@.dir/outtree > $@
	rm -rf $@.dir
	$(EPILOG)

#######################################################################
#######################################################################
#######################################################################
%.bs_partitions: %.bs_dnd
	$(PRELOG)
	@rm -f outfile outtree
	@echo -e "$*.bs_dnd\n$(OPTIONS_BOOTSTRAP_CONSENSUS)Y" |\
	$(CMD_BOOTSTRAP_CONSENSUS) > $@.log
	@python $(DIR_SCRIPTS_TOOLS)substitute_tokens.py \
	--apply=bootstrap_$*.index \
	--regex-token="(id\d+)" \
	--invert < outfile >  $@
	@python $(DIR_SCRIPTS_TOOLS)tree_map_leaves.py \
	--apply=bootstrap_$*.index \
	--invert < outtree |\
	grep -v "#" > $@.dnd
	@rm -f outtree outfile
	$(EPILOG)

%.bs_evaluate: %.bs_partitions
	$(PRELOG)
	@rm -f $@.*
	@python $(DIR_SCRIPTS_GENEPREDICTION)optic/evaluate_bootstrap.py \
		--prefix=$* \
		--reference-tree="$(PARAM_SPECIES_TREE)" \
		--file-clusters=$@.components \
		--file-inconsistencies=$@.inconsistencies \
		--file-subtrees=$@.subtrees \
		--verbose=2 \
		--min-report-support=$(PARAM_BOOTSTRAP_MIN_REPORT_SUPPORT) \
		--min-cluster-support=$(PARAM_BOOTSTRAP_MIN_CLUSTER_SUPPORT) \
		< $*.bs_partitions > $@ 
	$(EPILOG)

####################################################################
## evalulate multiple alignment to create good subsets.
## use the bootstrap split as an initial partition
%.qc: %.mali %.bs 
	$(CMD_MSG) "quality controlling of cluster $* started." >> $*.log
	@$(CMD_REMOTE_SUBMIT) \
		python $(DIR_SCRIPTS_GENEPREDICTION)optic/evaluate_mali.py \
		--components=$*.bs_evaluate.components \
		--prefix= \
		--cluster \
		--exons=$*.exons \
		--master-pattern='$(PARAM_INPUT_GENOME_MASTER)' \
		--remove-fragments \
		--verbose=2 \
		--file-bootstrap=$*.bs_partitions \
		--file-tree=../reference_tree \
		--min-report-support=$(PARAM_BOOTSTRAP_MIN_REPORT_SUPPORT) \
		--min-cluster-support=$(PARAM_BOOTSTRAP_MIN_CLUSTER_SUPPORT) \
	< $*.raw_mali > $@
	$(CMD_MSG) "quality controlling of cluster $* finished." >> $*.log


###############################################################################
include $(DIR_SCRIPTS_GENEPREDICTION)/makefiles/Makefile.common