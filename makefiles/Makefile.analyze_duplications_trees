################################################################################
#   Gene prediction pipeline 
#
#   $Id: Makefile.analyze_duplications_trees 2781 2009-09-10 11:33:14Z andreas $
#
#   Copyright (C) 2004 Andreas Heger
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#################################################################################
##
## Build trees for duplications (in order to date them and place them on the tree).
##
#################################################################################
SHELL=/bin/bash --login

LOG=log

################################################
## Section parameters: start
################################################
## project name
PARAM_PROJECT_NAME?=analyze_codonbias_duplications
################################################
## directories
## directory where gene prediction scripts can be found
DIR_SCRIPTS_GENEPREDICTION?=/home/andreas/gpipe/
## directory where various helper scripts can be found
DIR_SCRIPTS_TOOLS?=/net/cpp-group/scripts/tools/
## shared directory, path for submit host
DIR_TMP_SHARED_LOCAL?=/net/cpp-group/gpipe/tmp/$(PARAM_PROJECT_NAME)/
## shared directory, path for cluster node
DIR_TMP_SHARED_REMOTE?=/net/cpp-group/gpipe/tmp/$(PARAM_PROJECT_NAME)/

## Directory to upload summary pages.
PARAM_DIR_UPLOAD?=/home/andreas/uploads/

################################################
## Database connection parameters
## database
PARAM_PSQL_DATABASE?=andreas
## host
PARAM_PSQL_HOST?=db
## user
PARAM_PSQL_USER?=andreas
## schema
PARAM_PSQL_SCHEMA?=$(PARAM_PROJECT_NAME)

## table with pairwise ortholog assignments
PARAM_TABLE_NAME_ORTHOLOGLINKS?=$(PARAM_PSQL_SCHEMA).orthologlinks_second

## table with pairwise distances
PARAM_TABLE_NAME_DISTANCES_GENES?=$(PARAM_PSQL_SCHEMA).distances_genes

################################################
## genome parameters

## number of genomes to use
PARAM_NUM_GENOMES?=`echo $(PARAM_SRC_SCHEMAS) | wc -w`

## id of master genome
PARAM_GENOME_MASTER?=dmel_vs_dmel3

## pattern to identify master genome
PARAM_INPUT_GENOME_MASTER?=^$(PARAM_GENOME_MASTER)

## pattern to extract genome from identifier
PARAM_INPUT_GENOME?=^([^$(PARAM_SEPARATOR)]+)[^$(PARAM_SEPARATOR)]

################################################
## directories and database schemas
## IMPORTANT: Add new entries to the end for update to work

## schemas in input
PARAM_SRC_SCHEMAS?=dmel_vs_dmel3 dsim_vs_dmel5 dsec_vs_dmel2 dyak_vs_dmel6 dere_vs_dmel5 dana_vs_dmel5 dpse_vs_dmel7 dper_vs_dmel2 dvir_vs_dmel5 dmoj_vs_dmel5 dgri_vs_dmel4

## These should be sorted in the same way.
PARAM_SRC_DIRS?=$(PARAM_SRC_SCHEMAS)

## separator in identifier
PARAM_SEPARATOR?=|

## names of genomes (for export)
PARAM_SRC_NAMES?=$(shell echo "$(PARAM_SRC_SCHEMAS)" | perl -p -e "s/_vs_dmel//g")

################################################
## various things I need to put somewhere.
PARAM_SRC_DIR?=../../orthology_pairwise_1v4/analysis.dir/

################################################
## Distance to use
PARAM_DISTANCE?=ks

## minimum distance filter
## (removes spurious distances)
PARAM_MIN_DISTANCE?=0.0005

## maximum distance 
## (removes dubious distances)
PARAM_MAX_DISTANCE?=5.0

################################################
# Section parameters: end
################################################

################################################
## some commands for dealing with psql

## extracting prefix for table name
CMD_TABLE_PREFIX=`echo $* | perl -p -e "s/\./_/g"`


GENOMES_COMMA=`echo '$(PARAM_SRC_SCHEMAS)' | perl -p -e 's/ +/,/g'`
NAMES_COMMA=`echo '$(PARAM_SRC_NAMES)' | perl -p -e 's/ +/,/g'`

##########################################################################
prepare: create-log 

############################################################################
## Get all links for duplicated genes.
## Selecting links from PSQL was too slow, so dump full graph and join on file system.
orthologs.links: input.genes
	$(PRELOG)
	@awk '{ split($$1,a, "$(PARAM_SEPARATOR)"); \
	       printf("%s$(PARAM_SEPARATOR)%s\n", a[1],a[3]); }' \
	< input.genes > $@_tmp_v
	@$(PSQL_CONNECTION) "SELECT \
			l.schema1 || '$(PARAM_SEPARATOR)' || l.gene_id1, \
			l.schema2 || '$(PARAM_SEPARATOR)' || l.gene_id2 \
			FROM $(PARAM_TABLE_NAME_ORTHOLOGLINKS) AS l \
			GROUP BY l.schema1, l.gene_id1, l.schema2, l.gene_id2" \
	$(PSQL_CONNECTION_OPTIONS) > $@_tmp_o
	@$(PSQL_CONNECTION) "SELECT \
			d.schema1 || '$(PARAM_SEPARATOR)' || d.gene_id1, \
			d.schema2 || '$(PARAM_SEPARATOR)' || d.gene_id2, \
			MIN(d.$(PARAM_DISTANCE)) \
			FROM $(PARAM_TABLE_NAME_DISTANCES_GENES) AS d \
			WHERE d.$(PARAM_DISTANCE) > $(PARAM_MIN_DISTANCE) \
			GROUP BY d.schema1, d.gene_id1, d.schema2, d.gene_id2" \
	$(PSQL_CONNECTION_OPTIONS) > $@_tmp_d
	@perl $(DIR_SCRIPTS_TOOLS)graph_filter_links_vertices.pl -s $@_tmp_v < $@_tmp_o > $@_tmp_of
	@perl $(DIR_SCRIPTS_TOOLS)graph_filter_links_links.pl $@_tmp_of < $@_tmp_d |\
	cut -f 1,2,3 > $@
	$(EPILOG)

##################################################################################
## components according to Leo
orthologs.clusters: orthologs.links
	$(PRELOG)
	@seq_pairs_cluster_by_single_linkage \
	--err_log=$@.error \
	< $< > $@
	$(EPILOG)

########################################################################
## build trees
orthologs.trees: orthologs.clusters
	$(PRELOG)
	@tree_kitsch \
	--iterations 50 \
	--input=p \
	--err_log=$@.error \
	< $< > $@
	$(EPILOG)

all: 

##########################################################################
DSTNCOMPARE_QUERIES=$(wildcard data.dir/*.data)
DSTNCOMPARE_TARGETS=$(DSTNCOMPARE_QUERIES:data.dir/%.data=dstncompare.dir/%.dstncompare)

dstncompare: $(DSTNCOMPARE_TARGETS)

##########################################################################
## First distribution: orthologs
## Second distribution: orthologs with paralogs
dstncompare.dir/%.dstncompare: data.dir/%.data
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)r_compare_distributions.py \
	--method=ks \
	--hardcopy=dstncompare.dir/$*.png \
	--bin-size=0.1 \
	--min-value=0 \
	--legend="1:1 orthologs,m:1 orthologs" \
	--infile1=<( awk '!/^schema/ && $$2 == "1" && $$3 == "1" && $$4 < $(PARAM_MAX_DISTANCE) { printf("%s\n", $$4);}' < data.dir/$*.data ) \
	--infile2=<( awk '!/^schema/ && $$2 != "1" && $$3 == "1" && $$4 < $(PARAM_MAX_DISTANCE) { printf("%s\n", $$4);}' < data.dir/$*.data ) \
	> $@
	$(EPILOG)

##########################################################################
## Build summary page for wiki
summary.wiki:
	$(PRELOG)
	@rm -f $@
	python $(DIR_SCRIPTS_TOOLS)preppy.py \
	$(DIR_SCRIPTS_GENEPREDICTION)analyze_codonbias_duplications_wiki.prep \
	genomes=$(GENOMES_COMMA) \
	> $@
	@mv -f summary.wiki $(PARAM_DIR_UPLOAD)
	@rm -f $(PARAM_DIR_UPLOAD)$@.zip
	@zip $(PARAM_DIR_UPLOAD)$@.zip *.png *.ps_* 2>/dev/null
	$(EPILOG)

##########################################################################
## How to make a picture out of a matrix
%.png: %.matrix
	@python $(DIR_SCRIPTS_TOOLS)plot_matrix.py \
	--headers --labels="Genomes","Genomes" \
	--hardcopy=$@ \
	< $*.matrix

##########################################################################
## Matrix of p-values
p_values.matrix:
	$(PRELOG)
	@grep "p.value" pair_*.dstncompare |\
	perl -p -e "s/.dstncompare:p.value//; s/pair_//; s/-/\t/;" |\
	python $(DIR_SCRIPTS_TOOLS)sparse2full.py \
	--titles \
	--asymmetric \
	--row-names="$(GENOMES_COMMA)" \
	--col-names="$(GENOMES_COMMA)" |\
	python $(DIR_SCRIPTS_TOOLS)matrix2matrix.py \
	--method=negzero2value,log \
	--value=1e-15 \
	--headers \
	> $@
	$(EPILOG)

##########################################################################
## Matrix of counts for duplications/deletions
## Use as fg.matrix/bg.matrix
fg.matrix bg.matrix:
	$(PRELOG)
	@f=$@; prefix=$${f%.matrix}; \
	wc -l *.$${prefix} |\
	awk '!/total/ { gsub( "[.].*", "", $$2); split($$2, a, "-") ; \
		printf("%s\t%s\t%s\n", a[1], a[2], $$1); } ' |\
	python $(DIR_SCRIPTS_TOOLS)sparse2full.py \
	--titles \
	--asymmetric \
	--row-names="$(GENOMES_COMMA)" \
	--col-names="$(GENOMES_COMMA)" > $@
	$(EPILOG)

##########################################################################
clean:
	rm -f *.png *.analysis *.chunk *.bg *.fg *.dstncompare *.map
	rm -f *.prepare

##########################################################################
include $(DIR_SCRIPTS_GENEPREDICTION)/makefiles/Makefile.common
