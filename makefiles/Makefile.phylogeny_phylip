################################################
## Section parameters: start
################################################

DIR_BIN?=/net/cpp-group/Leo/bin/
DIR_SCRIPTS?=/net/cpp-group/scripts/tools/

################################################
## Cluster parameters
## queue to submit to
PARAM_QUEUE?=bc1.q,bc2.q

## number of bootstraps
PARAM_NUM_BOOTSTRAPS?=1000

PARAM_RANDOM_SEED=413121

################################################
# Section parameters: end
################################################

###########################################################
# commands for creating bootstrap set
OPTIONS_BOOTSTRAP=R\n$(PARAM_NUM_BOOTSTRAPS)\nB\n3\n
OPTIONS_BOOTSTRAP_RANDOM_SEED=$(PARAM_RANDOM_SEED)\n
CMD_TREE_BOOTSTRAP=seqboot

# commands for building distance matrix
OPTIONS_MATRIX_BOOTSTRAP=D\nD\nL\nM\nD\n$(PARAM_NUM_BOOTSTRAPS)\n
OPTIONS_MATRIX=L\nD\nD\n
CMD_TREE_MATRIX=dnadist

# use lower triangular matrix
OPTIONS_TREE_BOOTSTRAP=L\nM\n1000\n$(PARAM_RANDOM_SEED)\n
OPTIONS_TREE=L\n
CMD_TREE_NJ=neighbor

# commands for building consensus tree
OPTIONS_TREE_CONSENSUS=L\n
CMD_TREE_CONSENSUS=consense

# turn of preview
OPTIONS_PLOT=/net/cpp-group/bin/font1\nV\nN\n
CMD_PLOT=drawtree

###########################################################
## Subdirectory processing 
SUBDIRS=$(wildcard bootstrap/bootstrap_*)

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

CHUNKS_INPUT=$(wildcard *.fasta)
CHUNKS_KAKS=$(CHUNKS_INPUT:%.fasta=%.kaks)
CHUNKS_TREE=$(CHUNKS_INPUT:%.fasta=%.dnd)

############################################################
all: subdirs

############################################################
## Preprocessing
input.fasta: cdnas.fasta
	python $(DIR_SCRIPTS)substitute_tokens.py \
	--create=index \
	--regex-token=">(\S+)" \
	--pattern-sub="id%s" \
	< cdnas.fasta > $@

############################################################
bootstrap.phylip: input.phylip
	echo -e "input.phylip\n$(OPTIONS_BOOTSTRAP)Y\n$(OPTIONS_BOOTSTRAP_RANDOM_SEED)" |\
	$(CMD_TREE_BOOTSTRAP) > $@.log
	mv outfile $@

bootstrap.dist: bootstrap.phylip
	echo -e "bootstrap.phylip\n$(OPTIONS_MATRIX_BOOTSTRAP)Y" |\
	$(CMD_TREE_MATRIX) > $@.log
	mv outfile $@

bootstrap.dnd: bootstrap.dist
	rm -f outfile outtree
	echo -e "bootstrap.dist\n$(OPTIONS_TREE_BOOTSTRAP)Y" |\
	$(CMD_REMOTE_SUBMIT) $(CMD_TREE_NJ) > $@.log
	mv outfile $@.tree
	mv outtree $@

consensus.dnd: bootstrap.dnd
	rm -f outfile outtree
	echo -e "bootstrap.dnd\n$(OPTIONS_TREE_CONSENSUS)Y" |\
	$(CMD_TREE_CONSENSUS) > $@.log
	mv outfile $@.tree
	python $(DIR_SCRIPTS)substitute_tokens.py \
	--apply=index \
	--regex-token="(id\d+)" --multiple \
	--invert \
	< outtree > $@
	rm -f outtree

############################################################
master.phylip: input.phylip
	-ln -s input.phylip $@

master.dist: master.phylip
	echo -e "master.phylip\n$(OPTIONS_MATRIX)Y" |\
	$(CMD_TREE_MATRIX) > $@.log
	mv outfile $@

master.dnd: master.dist
	rm -f outfile outtree
	echo -e "master.dist\n$(OPTIONS_TREE)Y" |\
	$(CMD_REMOTE_SUBMIT) $(CMD_TREE_NJ) > $@.log
	mv outfile $@.tree
	python $(DIR_SCRIPTS)substitute_tokens.py \
	--apply=index \
	--regex-token="(id\d+)" --multiple \
	--invert \
	< outtree > $@
	rm -f outtree

#################################################
## 

fitch_tree: dist
	$(DIR_BIN)tree_fitch \
	--input_format l
	--iterations 20
	--verbose
	< $*.matrix > $*.tree


%.ps: %.dnd
	rm -f plotfile
	echo -e "$*.dnd\n$(OPTIONS_PLOT)Y" |\
	$(CMD_PLOT) > $@.log
	mv plotfile $@

%.pdf: %.ps
	ps2pdf $*.ps

clean:
	rm -f master.*
	rm -f bootstrap.*


##################################################################
## Old:
input.phylip: input.fasta
	readseq -f12 -p < input.fasta > $@

%.fasta: %.phylip
	python $(DIR_SCRIPTS)mali_phylip2fasta.py < $*.phylip > $@
