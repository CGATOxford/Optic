################################################################################
#   Gene prediction pipeline 
#
#   $Id: Makefile.analyze_bootstrap 2781 2009-09-10 11:33:14Z andreas $
#
#   Copyright (C) 2005 Andreas Heger
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#################################################################################
#################################################################################
#################################################################################
##
## Analyzing multiple alignments for duplications
## 
## This pipeline follows the recipe of Leo's
##
## 1. Build pairwise ka/ks
## 2. Build tree with fitch
## 3. Run site-specific mode with PAML using three initial values for omega:
##    0.03, 0.3, 1.3
## 4  Parse results
##
## The input is obtained from a directory of multiple alignments and a file
## of components/sequences to take.
##
#################################################################################
SHELL=/bin/bash --login

LOG=log

################################################
## Section parameters: start
################################################
## project name
PARAM_PROJECT_NAME?=bootstraps
################################################
## directories
## directory where gene prediction scripts can be found
DIR_SCRIPTS_GENEPREDICTION?=/home/andreas/gpipe/
## directory where various helper scripts can be found
DIR_SCRIPTS_TOOLS?=/net/cpp-group/scripts/tools/
## shared directory, path for submit host
DIR_TMP_SHARED_LOCAL?=/net/cpp-group/gpipe/tmp/$(PARAM_PROJECT_NAME)/
## shared directory, path for cluster node
DIR_TMP_SHARED_REMOTE?=/net/cpp-group/gpipe/tmp/$(PARAM_PROJECT_NAME)/

DIR_TMP=/tmp/

################################################
## Number of bootstraps
PARAM_NUM_BOOTSTRAPS?=100

PARAM_BOOTSTRAP_MIN_CLUSTER_SUPPORT?=90

PARAM_BOOTSTRAP_MIN_REPORT_SUPPORT?=70

PARAM_BOOTSTRAP_RANDOM_SEED?=413121

## distance matrix program
PARAM_CMD_BOOTSTRAP_MATRIX?=dnadist

## tree calculation method
PARAM_CMD_BOOTSTRAP_TREE?=neighbor

################################################
# Section parameters: end
################################################

###########################################################
## Options and commands for sampling:
OPTIONS_BOOTSTRAP_SAMPLE=R\n$(PARAM_NUM_BOOTSTRAPS)\nB\n3\n
OPTIONS_BOOTSTRAP_RANDOM_SEED=$(PARAM_BOOTSTRAP_RANDOM_SEED)\n
CMD_BOOTSTRAP_SAMPLE=seqboot

## commands for building distance matrix
OPTIONS_BOOTSTRAP_MATRIX=D\nD\nL\nM\nD\n$(PARAM_NUM_BOOTSTRAPS)\n
OPTIONS_MATRIX=L\n
CMD_BOOTSTRAP_MATRIX=dnadist

## Options and commands for building tree
OPTIONS_BOOTSTRAP_TREE=L\nM\n$(PARAM_NUM_BOOTSTRAPS)\n$(PARAM_BOOTSTRAP_RANDOM_SEED)\n
CMD_BOOTSTRAP_TREE?=neighbor

###########################################################
## commands for building consensus tree
OPTIONS_BOOTSTRAP_CONSENSUS=L\n
CMD_BOOTSTRAP_CONSENSUS=consense

##Primary target
QUERIES_BOOTSTRAP=$(wildcard *.fasta)
TARGETS_BOOTSTRAP=$(QUERIES_BOOTSTRAP:%.fasta=%.bootstrap)

bootstrap: $(TARGETS_BOOTSTRAP)

%.bootstrap: %.bs_partitions
	@touch $@
	$(EPILOG)

#################################################
## bootstrapping using dnadist
%.bs_input: %.fasta
	$(PRELOG)
	@grep -v "#" < $< |\
	python $(DIR_SCRIPTS_TOOLS)substitute_tokens.py \
	--create=bootstrap_$*.index \
	--regex-token=">(\S+)" \
	--pattern-sub="id%s" |\
	perl -p -e "s/ //g" > $@_tmp;
	@seq_extract \
		--output_format p \
		--sequences $@_tmp > $@
	@rm -f $@_tmp;
	$(EPILOG)

%.bs_samples: %.bs_input
	$(PRELOG)
	@rm -f outfile outtree
	@echo -e "$*.bs_input\n$(OPTIONS_BOOTSTRAP_SAMPLE)Y\n$(OPTIONS_BOOTSTRAP_RANDOM_SEED)\n" |\
	$(CMD_BOOTSTRAP_SAMPLE) > $@.log
	@mv outfile $@
	$(EPILOG)

%.bs_dist: %.bs_samples
	$(PRELOG)
	@rm -f outfile outtree
	@echo -e "$*.bs_samples\n$(OPTIONS_BOOTSTRAP_MATRIX)Y" |\
	$(CMD_BOOTSTRAP_MATRIX) > $@.log
	@mv outfile $@
	$(EPILOG)

%.bs_dnd: %.bs_dist
	$(PRELOG)
	@rm -f outfile outtree
	@echo -e "$*.bs_dist\n$(OPTIONS_BOOTSTRAP_TREE)Y" |\
	$(CMD_BOOTSTRAP_TREE) > $@.log
	@mv outtree $@
	$(EPILOG)

%.bs_partitions: %.bs_dnd
	$(PRELOG)
	@rm -f outfile outtree
	@echo -e "$*.bs_dnd\n$(OPTIONS_BOOTSTRAP_CONSENSUS)Y" |\
	$(CMD_BOOTSTRAP_CONSENSUS) > $@.log
	@python $(DIR_SCRIPTS_TOOLS)substitute_tokens.py \
	--apply=bootstrap_$*.index \
	--regex-token="(id\d+)" \
	--invert < outfile >  $@
	@python $(DIR_SCRIPTS_TOOLS)tree_map_leaves.py \
	--apply=bootstrap_$*.index \
	--invert < outtree |\
	grep -v "#" > $@.dnd
	@rm -f outtree outfile
	$(EPILOG)

.PRECIOUS: %.bs_partitions %.bs_dnd %.bs_dist %.bs_samples %.bs_input

##############################################################################
include $(DIR_SCRIPTS_GENEPREDICTION)/makefiles/Makefile.common
