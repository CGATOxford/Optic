################################################################################
#   Gene prediction pipeline 
#
#   $Id: Makefile.analyze_kaks 2781 2009-09-10 11:33:14Z andreas $
#
#   Copyright (C) 2005 Andreas Heger
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#################################################################################
#################################################################################
#################################################################################
## Analysis of kaks values
##
## kaks can be computed the following way:
##
## Gene trees:
##
##	ka/ks of average ka and ks per branch
##
##      average of ka/ks for each branch. Note: the matrices have to sorted 
##	accordingly.
##
## Genome trees:
##
##	ka/ks for each branch
##
## All these combinations are possible for all tree building methods
## (fitch/kitsch/...).
##
#################################################################################
SHELL=/bin/bash --login

LOG=log

################################################
## Section parameters: start
################################################
## project name
PARAM_PROJECT_NAME?=geneprediction
################################################
## directories
## directory where gene prediction scripts can be found
DIR_SCRIPTS_GENEPREDICTION?=/home/andreas/gpipe/
## directory where various helper scripts can be found
DIR_SCRIPTS_TOOLS?=/net/cpp-group/scripts/tools/
## shared directory, path for submit host
DIR_TMP_SHARED_LOCAL?=/net/cpp-group/gpipe/tmp/$(PARAM_PROJECT_NAME)/
## shared directory, path for cluster node
DIR_TMP_SHARED_REMOTE?=/net/cpp-group/gpipe/tmp/$(PARAM_PROJECT_NAME)/

DIR_TMP=/tmp/

## Filename with src information using ks
PARAM_DIR_SRC_KS?=../orthology_phylogeny_ks/

## Filename with src information using ka
PARAM_DIR_SRC_KA?=../orthology_phylogeny_ka/

## Outpgoup to use
PARAM_OUTGROUP?=dwil_vs_dmel1

## Filename with brances to analyze
PARAM_FILENAME_SELECT_BRANCHES?=../select_branches

################################################
# Section parameters: end
################################################
REQUISITES=

#####################################################################################
#####################################################################################
#####################################################################################
## Setting up the primary targets
#####################################################################################
## Genome trees
GENOME_TREES?=median_fitch mean_fitch mean_replicates_fitch median_kitsch mean_kitsch mean_replicates_kitsch
TARGETS_GENOME_TREES=$(GENOME_TREES:%=%_genome.stats)

## Gene trees
GENE_TREES?=fitch fitch_fitted kitsch kitsch_fitted  
TARGETS_GENE_TREES_KS=$(GENE_TREES:%=%_ks_genes.stats) 
TARGETS_GENE_TREES_KA=$(GENE_TREES:%=%_ka_genes.stats) 
TARGETS_GENE_TREES_KAKS=$(GENE_TREES:%=%_kaks_genes.stats) 
TARGETS_GENE_TREES=$(TARGETS_GENE_TREES_KS) $(TARGETS_GENE_TREES_KA) $(TARGETS_GENE_TREES_KAKS)

all: my_translation \
	$(TARGETS_GENE_TREES) \
	$(TARGETS_GENOME_TREES)

summaries: summary_ks.stats summary_ka.stats summary_kaks.stats

#####################################################################################
#####################################################################################
#####################################################################################
## Translate branch designations into terminal codes
CMD_MY_TRANSLATE=python $(DIR_SCRIPTS_TOOLS)substitute_tokens.py --apply=my_translation --column=1

#####################################################################################
#####################################################################################
#####################################################################################
## Working on gene trees
#####################################################################################
## Columns that are shared between ks and ka matrix (Note, the component numbering scheme and
## thus the matrix columns need to be corresponding!
%.common_clusters:
	$(PRELOG)
	@perl $(DIR_SCRIPTS_TOOLS)set_intersection.pl \
	<(grep "branch" $(PARAM_DIR_SRC_KS)analysis.dir/error_bars_$*.branches | perl -p -e "s/\t/\n/g") \
	<(grep "branch" $(PARAM_DIR_SRC_KS)analysis.dir/error_bars_$*.branches | perl -p -e "s/\t/\n/g") > $@
	$(CMD_LOG) "`wc -l $@` shared clusters."
	$(EPILOG)

test:
	perl -p -e "s/\bna\b/0.0000/g" 

## Matrix of ks values for branches of interest
%_ks.matrix: %.common_clusters
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)csv_cut.py --filename-fields=$*.common_clusters \
	< $(PARAM_DIR_SRC_KS)analysis.dir/error_bars_$*.branches |\
	python $(DIR_SCRIPTS_TOOLS)table2table.py --method=upper-bound --parameters=5,0 --format="%6.4f" |\
	python $(DIR_SCRIPTS_TOOLS)table2table.py --method=lower-bound --parameters=0.0005,0 --format="%6.4f" \
	> $@
	$(EPILOG)

## Matrix of ka values for branches of interest
%_ka.matrix: %.common_clusters
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)csv_cut.py --filename-fields=$*.common_clusters \
	< $(PARAM_DIR_SRC_KA)analysis.dir/error_bars_$*.branches |\
	python $(DIR_SCRIPTS_TOOLS)table2table.py --method=upper-bound --parameters=5,0 --format="%6.4f" |\
	python $(DIR_SCRIPTS_TOOLS)table2table.py --method=lower-bound --parameters=0.0005,0 --format="%6.4f" \
	> $@
	$(EPILOG)

## Matrix of kaks values for branches of interest
%_kaks.matrix: %_ks.matrix %_ka.matrix
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)table2table.py --format="%6.4f" \
	        --method=normalize-by-table \
		--parameters=$*_ks.matrix \
		--columns=all-but-first \
	< $*_ka.matrix > $@
	$(EPILOG)

## compile branch statistices from matrix
%_genes.stats: %.matrix
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)data2stats.py \
		--rows --flat --titles --column=all --format="%6.4f" \
	< $*.matrix | grep -v "#" |\
	$(CMD_MY_TRANSLATE) > $@
	$(EPILOG)

## combine branch statistics for all statistics
%_genes_all.stats: %_ka_genes.stats %_ks_genes.stats %_kaks_genes.stats 
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)combine_tables.py \
	--titles \
	$^ > $@
	$(EPILOG)

GENE_TREES_ALL=$(GENE_TREES:%=%_genes_all.stats)
all_genes.stats:
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)combine_tables.py \
		--headers=auto \
		$(GENE_TREES_ALL) > $@
	$(EPILOG)

GENE_TREES_KS=$(GENE_TREES:%=%_ks_genes.stats)
GENE_TREES_KA=$(GENE_TREES:%=%_ka_genes.stats)
GENE_TREES_KAKS=$(GENE_TREES:%=%_kaks_genes.stats)

all_genes_ks.stats: TARGETS_GENE_TREES:=$(GENE_TREES_KS)
all_genes_ka.stats: TARGETS_GENE_TREES:=$(GENE_TREES_KA)
all_genes_kaks.stats: TARGETS_GENE_TREES:=$(GENE_TREES_KAKS)

all_genes_%.stats: 
	$(PRELOG)
	@$(MAKE) $(TARGETS_GENE_TREES)
	@python $(DIR_SCRIPTS_TOOLS)combine_tables.py \
		--headers=auto \
		$(TARGETS_GENE_TREES) > $@
	$(EPILOG)

#####################################################################################
#####################################################################################
#####################################################################################
#####################################################################################
## Working on genome trees
#####################################################################################
%_genome.stats:
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)combine_tables.py \
	$(PARAM_DIR_SRC_KA)$*.branches \
	$(PARAM_DIR_SRC_KS)$*.branches |\
	awk 'BEGIN { printf("branch\tka\tks\tkaks\n"); } \
		!/^#/ { printf("%s\t%6.4f\n", $$0, $$2 / $$3);}' |\
	$(CMD_MY_TRANSLATE) > $@
	$(EPILOG)

GENOME_TREES_ALL=$(GENOME_TREES:%=%_genome.stats)
all_genome.stats:
	$(PRELOG)
	@python $(DIR_SCRIPTS_TOOLS)combine_tables.py \
		--headers=auto \
		$(GENOME_TREES_ALL) > $@
	$(EPILOG)

#####################################################################################
#####################################################################################
#####################################################################################
## Summary files: ks/ka/kaks for each method (gene and genome trees)
## Taking the median for ks values for the gene trees

summary_ks.stats:   SUMMARY_GENE_TREES=$(TARGETS_GENE_TREES_KS)
summary_ka.stats:   SUMMARY_GENE_TREES=$(TARGETS_GENE_TREES_KA)
summary_kaks.stats: SUMMARY_GENE_TREES=$(TARGETS_GENE_TREES_KAKS)

SUMMARY_SECTIONS=median_%_genome mean_%_genome mean_replicates_%_genome %_genes %_fitted_genes 
SUMMARY_SORT_ORDER=$(subst %,fitch,$(SUMMARY_SECTIONS)) $(subst %,kitsch,$(SUMMARY_SECTIONS))

summary_%.stats:
	$(PRELOG)
	@for file in $(SUMMARY_GENE_TREES); do \
		result=`echo $${file} | perl -p -e "s/_$*//"`; \
		python $(DIR_SCRIPTS_TOOLS)csv_cut.py row median < $${file} > $@_tmp_$${result}; \
	done
	@for file in $(TARGETS_GENOME_TREES); do \
		python $(DIR_SCRIPTS_TOOLS)csv_cut.py branch $* < $${file} > $@_tmp_$${file}; \
	done
	@python $(DIR_SCRIPTS_TOOLS)combine_tables.py \
		--headers=auto --skip-titles --titles \
		$@_tmp_* |\
	perl -p -e "s/$@_tmp_//g; s/.stats//g;" |\
	python $(DIR_SCRIPTS_TOOLS)csv_cut.py \
		bin $(SUMMARY_SORT_ORDER) \
	> $@
	@rm -f $@_tmp_*
	$(EPILOG)

#####################################################################################
#####################################################################################
#####################################################################################
## Map branch names to terminal leaf for easier identification
#####################################################################################
my_translation: 
	$(PRELOG)
	@rm -f $@_tmp
	@for x in $(GENOME_TREES); do \
		awk '!/^#/ && $$1 ~ /-/ { \
		split( $$1, a, "-"); id=( split(a[1], b, "|") < split(a[2], c, "|") ? a[1] : a[2]); \
		printf("%s\t%s\n", $$1, id); }' \
		< $(PARAM_DIR_SRC_KA)$${x}.branches >> $@_tmp; \
	done
	@sort $@_tmp | uniq > $@
	@rm -f $@_tmp
	$(EPILOG)

#####################################################################################
#####################################################################################
#####################################################################################
## Correlation between ks and ka/ks
#####################################################################################
correlation_kaks:
	$(PRELOG)
	@rm -f $@
	@for file in $(GENE_TREES_KS); do \
		result=`echo $${file} | perl -p -e "s/_ks//"`; \
		python $(DIR_SCRIPTS_TOOLS)csv_cut.py row median < $${file} > $@_tmp_$${result}_1; \
	done
	@for file in $(GENE_TREES_KAKS); do \
		result=`echo $${file} | perl -p -e "s/_kaks//"`; \
		python $(DIR_SCRIPTS_TOOLS)csv_cut.py row median < $${file} > $@_tmp_$${result}_2; \
		printf "%s\t" $${result} >> $@; \
		python $(DIR_SCRIPTS_TOOLS)combine_tables.py --titles $@_tmp_$${result}_1 $@_tmp_$${result}_2 > $@_tmp_$${result}; \
		python $(DIR_SCRIPTS_TOOLS)r_table2scatter.py --verbose=0 --columns=2,3 --stats=pearson $@_tmp_$${result} >> $@; \
	done
	@for file in $(TARGETS_GENOME_TREES); do \
		printf "%s\t" $${file} >> $@; \
		python $(DIR_SCRIPTS_TOOLS)csv_cut.py branch ks kaks < $${file} |\
		python $(DIR_SCRIPTS_TOOLS)r_table2scatter.py --verbose=0 --columns=2,3 --stats=pearson >> $@; \
	done
	@rm -f $@_tmp*
	$(EPILOG)

#####################################################################################
#####################################################################################
#####################################################################################
#####################################################################################
ks_median_%.matrix:
	python $(DIR_SCRIPTS_TOOLS)tree2tree.py --outgroup=$(PARAM_OUTGROUP) < $(PARAM_DIR_SRC_KS)median_$*.tree |\
	grep -v "#" |\
	python $(DIR_SCRIPTS_TOOLS)tree2matrix.py --all-on-all --translate | grep -v "#" | perl -p -e "s/\t/-/" > $@

ka_median_%.matrix:
	python $(DIR_SCRIPTS_TOOLS)tree2tree.py --outgroup=$(PARAM_OUTGROUP) < $(PARAM_DIR_SRC_KA)median_$*.tree |\
	grep -v "#" |\
	python $(DIR_SCRIPTS_TOOLS)tree2matrix.py --all-on-all --translate | grep -v "#" | perl -p -e "s/\t/-/" > $@


kaks_median_%.matrix: ks_median_%.matrix ka_median_%.matrix
	python $(DIR_SCRIPTS_TOOLS)combine_tables.py ka_median_$*.matrix ks_median_$*.matrix |\
	awk 'BEGIN {printf("distance\tka\tks\tka/ks\n"); } !/^#/ {a = ($$3 != 0) ? $$2/$$3 : 0; printf( "%s\t%f\t%f\t%f\n", $$1, $$2, $$3, a); }' |\
	perl -p -e "s/_vs_dmel\d+//g" |\
	python $(DIR_SCRIPTS_TOOLS)filter_tokens.py --apply=$(PARAM_FILENAME_SELECT_BRANCHES) --column=1 |\
	$(CMD_TRANSLATE) > $@

#######################################################################################
clean:
	rm -f *.matrix *.stats *.common_clusters my_translation

#######################################################################################
include $(DIR_SCRIPTS_GENEPREDICTION)/makefiles/Makefile.common

