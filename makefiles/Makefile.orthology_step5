################################################################################
#   Gene prediction pipeline 
#
#   $Id: Makefile.orthology_step5 219 2005-11-09 09:55:49Z andreas $
#
#   Copyright (C) 2005 Andreas Heger
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#################################################################################
##############################################################################
## Step 5: build trees for each cluster
##############################################################################
STEP5_QUERIES=$(wildcard *.pairs)
STEP5_TARGETS=$(STEP5_QUERIES:%.pairs=%.tree)  

step5: $(STEP4_FINAL_STAGE).pairs step5.prepare step5.run step5.finish 
	touch $@

step5.run: step5.prepare
	$(MAKE) -C step5.dir -k -j $(PARAM_STEP2_NUMJOBS) step5-hook
	touch $@

step5-hook: $(STEP2_TARGETS)

step5.finish: step5.run trees


step5.prepare:
	$(MAKE) step5.dir 
	@seq_pairs_split_clusters_by_size.pl \
	    --file_size 1000000 \
	    --path step5.dir/cluster.pairs \
            < orthologs.pairs > $@
	$(CMD_LOG) "finished $@"

##############################################################################
## build subtrees for orthologous clusters
xorthologs.pairs: orthologs.links orthologs.components
	cat ../input.links |\
	perl $(DIR_SCRIPTS_TOOLS)graph_split_links_components.pl -n orthologs.components.map |\
	cut -f 1-3 |\
	perl $(DIR_SCRIPTS_TOOLS)graph_sort_links_components.pl -f fasta -s size orthologs.components.map |\
	grep -v "^#" > $@

xstrict_orthologs.pairs: orthologs.pairs
	perl $(DIR_SCRIPTS_TOOLS)graph_filter_links_links.pl orthologs.links < orthologs.pairs > $@

xorthologs_%.pairs: orthologs.links orthologs_%.components
	cat ../input.links |\
	perl $(DIR_SCRIPTS_TOOLS)graph_split_links_components.pl -n orthologs_$*.components.map |\
	cut -f 1-3 |\
	perl $(DIR_SCRIPTS_TOOLS)graph_sort_links_components.pl -f fasta -s size orthologs_$*.components.map |\
	grep -v "^#" > $@

xstrict_orthologs_%.pairs: orthologs_%.pairs
	perl $(DIR_SCRIPTS_TOOLS)graph_filter_links_links.pl orthologs.links < orthologs_$*.pairs > $@

trees: step5.run
	find . -name "*.tree" -maxdepth 2 -exec cat {} \; > $@

##############################################################################
## run kitsch or upgma to build trees
%.tree: %.pairs
	$(CMD_MSG) "tree calculation for $* started"
	@size=`head -n 1 $*.pairs | perl -p -e "s/>.* size= //; s/\s//g"`; \
	if [[ $$size -le $(PARAM_STEP2_TREE_SIZE) ]] ; then \
		$(CMD_REMOTE_SUBMIT)tree_kitsch \
			--input_format p \
			--iterations 30 \
			--weighting 3.0 \
			--header \
			--err_log $@.errors \
                        < $*.pairs \
                        > $@; \
	else \
		$(CMD_REMOTE_SUBMIT)tree_upgma \
			--input_format p \
			--header \
			--err_log $@.errors \
                        < $*.pairs \
                        > $@; \
	fi
	$(CMD_MSG) "tree calculation for $* finished."

