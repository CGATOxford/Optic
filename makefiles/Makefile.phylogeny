################################################
## Section parameters: start
################################################

DIR_BIN?=/net/cpp-group/Leo/bin/
DIR_SCRIPTS?=/net/cpp-group/scripts/tools/

################################################
## Cluster parameters
## queue to submit to
PARAM_QUEUE?=bc1.q,bc2.q

## number of bootstraps
PARAM_NUM_BOOTSTRAPS?=1000

################################################
# Section parameters: end
################################################

# turn of preview
OPTIONS_PLOT=/net/cpp-group/bin/font1\nV\nN\n
CMD_PLOT=drawtree

# use lower triangular matrix
OPTIONS_TREE=L\n
CMD_TREE_NJ=neighbor

OPTIONS_BOOTSTRAP=R\n$(PARAM_NUM_BOOTSTRAPS)\nB\n3\n
OPTIONS_BOOTSTRAP_RANDOM_SEED=4333
CMD_TREE_BOOTSTRAP=seqboot

## commands for building consensus tree
OPTIONS_TREE_CONSENSUS=L\n
CMD_TREE_CONSENSUS=consense

############################################################
all: subdirs

############################################################
## Preprocessing
input.fasta: cdnas.fasta
	python $(DIR_SCRIPTS)substitute_tokens.py \
	--create=index \
	--regex-token=">(\S+)" \
	--pattern-sub="id%s" \
	< cdnas.fasta > $@

%.bootstrap: %.fasta
	python $(DIR_SCRIPTS)mali2bootstrap.py \
	--samples=$(PARAM_NUM_BOOTSTRAPS) \
	--block-size=3 \
	--separator="#####" \
	< $*.fasta > $@

%.split: %.bootstrap
	python $(DIR_SCRIPTS)split_file.py \
	--split-regex="#####" --skip \
	--pattern-output="bootstrap_$*/bootstrap_%s/chunk.fasta" \
	< $*.bootstrap > $@
	for dir in bootstrap_$*/bootstrap_*; do \
		ln -s ../../Makefile $${dir}/Makefile; \
	done

negative_list: remove_list
	grep -f remove_list index > $@

#################################################
## steps run in subdirectories
SUBDIRS=$(wildcard bootstrap/bootstrap_*)

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

CHUNKS_INPUT=$(wildcard *.fasta)
CHUNKS_KAKS=$(CHUNKS_INPUT:%.fasta=%.kaks)
CHUNKS_TREE=$(CHUNKS_INPUT:%.fasta=%.dnd)

subdir-hook: $(CHUNKS_KAKS) $(CHUNKS_TREE)

$(SUBDIRS):
	$(MAKE) -C $@ subdir-hook

%.kaks: %.fasta
	$(CMD_REMOTE_SUBMIT) $(DIR_BIN)seq_pairs_kaks -a -A -e $@.log -c $*.fasta -t ./$*_tmp_kaks < /dev/null > $@
	rm -rf ./$*_tmp_kaks

%.dist: %.kaks
	cut -f 2 ../../negative_list > $@_tmp
	cut -f 1,2,4 $*.kaks |\
	grep -w -v -f "$@_tmp" |\
	$(DIR_BIN)matrix_extract -i p -o l |\
	awk '{$$1 = sprintf("%-10s", substr($$1,1,10)); print}' > $@
	rm -f $@_tmp

%.dnd: %.dist
	rm -f outfile outtree
	echo -e "$*.dist\n$(OPTIONS_TREE)Y" |\
	$(CMD_REMOTE_SUBMIT) $(CMD_TREE_NJ) > $@.log
	mv outfile $@.tree
	mv outtree $@

test:
	python $(DIR_SCRIPTS)substitute_tokens.py \
	--apply=../../index \
	--regex-token="(id\d+)" --multiple \
	--invert \
	< outtree > $@
	rm -f outtree

bootstrap.dnd:
	find . -name "chunk.dnd" -exec cat {} \; > $@

consensus.dnd: bootstrap.dnd
	rm -f outfile outtree
	echo -e "bootstrap.dnd\n$(OPTIONS_TREE_CONSENSUS)Y" |\
	$(CMD_TREE_CONSENSUS) > $@.log
	mv outfile $@.tree
	python $(DIR_SCRIPTS)substitute_tokens.py \
	--apply=index \
	--regex-token="(id\d+)" --multiple \
	--invert \
	< outtree > $@
	rm -f outtree


#################################################
## 

fitch_tree: dist
	$(DIR_BIN)tree_fitch \
	--input_format l
	--iterations 20
	--verbose
	< $*.matrix > $*.tree


%.ps: %.dnd
	rm -f plotfile
	echo -e "$*.dnd\n$(OPTIONS_PLOT)Y" |\
	$(CMD_PLOT) > $@.log
	mv plotfile $@

%.pdf: %.ps
	ps2pdf $*.ps

##################################################################
## Old:
input.phylip: input.fasta
	readseq -f12 -p < input.fasta > $@

%.pbootstrap: %.phylip
	echo -e "$*.phylip\n$(OPTIONS_BOOTSTRAP)Y\n$(OPTIONS_BOOTSTRAP_RANDOM_SEED)"|\
	$(CMD_TREE_BOOTSTRAP) > $@.log
	mv outfile $@

%.fasta: %.phylip
	python $(DIR_SCRIPTS)mali_phylip2fasta.py < $*.phylip > $@
